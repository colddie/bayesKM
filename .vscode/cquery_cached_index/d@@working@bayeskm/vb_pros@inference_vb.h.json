16
{"last_modification_time":1567195245,"language":2,"import_file":"d:/working/bayeskm/vb_pros/inference_vb.cc","args_hash":3416621732313805335,"includes":[{"line":76,"resolved_path":"c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/string"},{"line":77,"resolved_path":"c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/vector"}],"dependencies":["d:/working/bayeskm/vb_pros/inference_vb.cc"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15973954237143732185,"detailed_name":"Vb","short_name_offset":0,"short_name_size":2,"kind":5,"hover":"","comments":"","declarations":["85:5-85:7|-1|1|4"],"spell":"80:7-80:9|-1|1|2","extent":"80:1-264:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"vars":[0,8,1,2,3,4,9,10,11,12,5,13,14,15,6,7,16,17],"instances":[],"uses":["85:5-85:7|0|2|4"]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,5,6,0,8,1,9,10,11,12,5,13,14,15,6,17],"uses":[]},{"id":2,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2,3,4,7,2,3,4,7,16],"uses":[]}],"funcs":[{"id":0,"usr":17807874171987569696,"detailed_name":"static int *Vb::NewInstance()","short_name_offset":16,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"","declarations":[{"spell":"83:32-83:43|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":18280225078567939081,"detailed_name":"Vb::Vb()","short_name_offset":0,"short_name_size":2,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"85:5-85:7|0|2|2","extent":"85:5-99:6|0|2|0","declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":12290170388348051188,"detailed_name":"virtual void Vb::GetOptions(int &opts) const","short_name_offset":17,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"101:18-101:28|0|2|1","param_spellings":["101:49-101:53"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":1456356820658933988,"detailed_name":"int Vb::GetDescription() const","short_name_offset":8,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"102:25-102:39|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":10365909746140351802,"detailed_name":"int Vb::GetVersion() const","short_name_offset":8,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"103:20-103:30|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":10302269108215711079,"detailed_name":"virtual void Vb::Initialize(int *fwd_model, int &args)","short_name_offset":17,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"105:18-105:28|0|2|1","param_spellings":["105:39-105:48","105:65-105:69"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":6546437697694026357,"detailed_name":"virtual void Vb::DoCalculations(int &data)","short_name_offset":17,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"106:18-106:32|0|2|1","param_spellings":["106:48-106:52"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":5129547441956526909,"detailed_name":"virtual void Vb::SaveResults(int &rundata) const","short_name_offset":17,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"108:18-108:29|0|2|1","param_spellings":["108:45-108:52"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":879882385365638924,"detailed_name":"void Vb::InitializeNoiseFromParam(int &args, int *dist, int param_key)","short_name_offset":9,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"\nInitialize noise prior or posterior distribution from a file stored in the\nrundata under the given parameter key","declarations":[{"spell":"115:10-115:34|0|2|1","param_spellings":["115:50-115:54","115:69-115:73","115:82-115:91"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":16212254443131370023,"detailed_name":"void Vb::PassModelData(int voxel)","short_name_offset":9,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nPass the model the data, coords and suppdata for a voxel.\n\nFIXME this is not very nice and should not be necessary. Need to\naudit what models are using this info and find alternatives, e.g.\nreading suppdata in Initialize instead","declarations":[{"spell":"124:10-124:23|0|2|1","param_spellings":["124:28-124:33"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":16913905036235727841,"detailed_name":"bool Vb::IsSpatial(int &rundata) const","short_name_offset":9,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nDetermine whether we need spatial VB mode\n\nIt is required either because it has been asked for (--method=spatialvb) or\nif any spatial priors have been specified (types mMpP)","declarations":[{"spell":"132:10-132:19|0|2|1","param_spellings":["132:35-132:42"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":837868243970345828,"detailed_name":"virtual void Vb::DoCalculationsVoxelwise(int &data)","short_name_offset":17,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"\nDo calculations loop in voxelwise mode (i.e. all iterations for\none voxel, then all iterations for the next voxel, etc)","declarations":[{"spell":"138:18-138:41|0|2|1","param_spellings":["138:57-138:61"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":10021148796513523610,"detailed_name":"virtual void Vb::DoCalculationsSpatial(int &data)","short_name_offset":17,"short_name_size":21,"kind":6,"storage":1,"hover":"","comments":"\nDo calculations loop in spatial mode (i.e. one iteration of all\nvoxels, then next iteration of all voxels, etc)","declarations":[{"spell":"144:18-144:39|0|2|1","param_spellings":["144:55-144:59"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":16799119021433249932,"detailed_name":"double Vb::CalculateF(int v, int label, double Fprior)","short_name_offset":11,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nCalculate free energy if required, and display if required","declarations":[{"spell":"149:12-149:22|0|2|1","param_spellings":["149:27-149:28","149:42-149:47","149:56-149:62"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":16306202592711512524,"detailed_name":"void Vb::DebugVoxel(int v, const int &where)","short_name_offset":9,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nOutput detailed debugging information for a voxel","declarations":[{"spell":"154:10-154:20|0|2|1","param_spellings":["154:25-154:26","154:42-154:47"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":9413329206570616950,"detailed_name":"void Vb::SetupPerVoxelDists(int &allData)","short_name_offset":9,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"\nSetup per-voxel data for Spatial VB\n\nSpatial VB needs each voxel's prior/posterior and other\ndata stored as it affects neighbouring voxels. This sets\nup the vectors which store these things which are just\ncreated on the fly for normal VB and throw away after each\nvoxel is done.","declarations":[{"spell":"165:10-165:28|0|2|1","param_spellings":["165:44-165:51"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":2311376479018264986,"detailed_name":"void Vb::CheckCoordMatrixCorrectlyOrdered(const int &voxelCoords)","short_name_offset":9,"short_name_size":32,"kind":6,"storage":1,"hover":"","comments":"\nCheck voxels are listed in order\n\nOrder must be increasing in z value, or if same\nincreasing in y value, and if y and z are same\nincreasing in x value.\n\nThis is basically column-major (Fortran) ordering - used as default by NEWIMAGE.","declarations":[{"spell":"176:10-176:42|0|2|1","param_spellings":["176:65-176:76"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":419689327954265362,"detailed_name":"void Vb::CalcNeighbours(const int &voxelCoords)","short_name_offset":9,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\nCalculate first and second nearest neighbours of each voxel","declarations":[{"spell":"181:10-181:24|0|2|1","param_spellings":["181:47-181:58"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":9572776022915398628,"detailed_name":"void Vb::IgnoreVoxel(int v)","short_name_offset":9,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nIgnore this voxel in future updates.\n\nNo calculation of priors or posteriors will occur for this voxel\nand it will be removed from the lists of neighbours for other voxels.\nThe effect should be as if it were masked","declarations":[{"spell":"190:10-190:21|0|2|1","param_spellings":["190:26-190:27"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":16860546077508535678,"detailed_name":"int Vb::m_nvoxels","short_name_offset":8,"short_name_size":9,"hover":"","comments":"Number of voxels in data","declarations":[],"spell":"193:9-193:18|0|2|2","extent":"193:5-193:18|0|2|0","type":1,"uses":["86:11-86:20|1|3|20"],"kind":8,"storage":0},{"id":1,"usr":18051833758609708222,"detailed_name":"int Vb::m_noise_params","short_name_offset":8,"short_name_size":14,"hover":"","comments":"\nNumber of noise parameters.","declarations":[],"spell":"203:9-203:23|0|2|2","extent":"203:5-203:23|0|2|0","type":1,"uses":["87:11-87:25|1|3|20"],"kind":8,"storage":0},{"id":2,"usr":3010446527113761025,"detailed_name":"bool Vb::m_needF","short_name_offset":9,"short_name_size":7,"hover":"","comments":"True if convergence detector requires the free energy","declarations":[],"spell":"206:10-206:17|0|2|2","extent":"206:5-206:17|0|2|0","type":2,"uses":["88:11-88:18|1|3|20"],"kind":8,"storage":0},{"id":3,"usr":733402540791734974,"detailed_name":"bool Vb::m_printF","short_name_offset":9,"short_name_size":8,"hover":"","comments":"True if we need to print the free energy at each iteration","declarations":[],"spell":"209:10-209:18|0|2|2","extent":"209:5-209:18|0|2|0","type":2,"uses":["89:11-89:19|1|3|20"],"kind":8,"storage":0},{"id":4,"usr":8062360929494013295,"detailed_name":"bool Vb::m_saveF","short_name_offset":9,"short_name_size":7,"hover":"","comments":"True if we need to to save the final free energy","declarations":[],"spell":"212:10-212:17|0|2|2","extent":"212:5-212:17|0|2|0","type":2,"uses":["90:11-90:18|1|3|20"],"kind":8,"storage":0},{"id":5,"usr":11152305611562343027,"detailed_name":"int Vb::m_num_mcsteps","short_name_offset":8,"short_name_size":13,"hover":"","comments":"Number of motion correction steps to run","declarations":[],"spell":"232:9-232:22|0|2|2","extent":"232:5-232:22|0|2|0","type":1,"uses":["95:11-95:24|1|3|20"],"kind":8,"storage":0},{"id":6,"usr":780946354492276375,"detailed_name":"int Vb::m_spatial_dims","short_name_offset":8,"short_name_size":14,"hover":"","comments":"\nNumber of spatial dimensions\n\n0 = no spatial smoothing\n1 = Probably not sensible!\n2 = Smoothing in slices only\n3 = Smoothing by volume","declarations":[],"spell":"251:9-251:23|0|2|2","extent":"251:5-251:23|0|2|0","type":1,"uses":["96:11-96:25|1|3|20"],"kind":8,"storage":0},{"id":7,"usr":13439135030050527494,"detailed_name":"bool Vb::m_locked_linear","short_name_offset":9,"short_name_size":15,"hover":"","comments":"\nFix the linearization centres of the linearized forward model.\n\nThis reduces the inference to a purely linear problem. The fixed\ncentres are generally loaded from an MVN file","declarations":[],"spell":"259:10-259:25|0|2|2","extent":"259:5-259:25|0|2|0","type":2,"uses":["97:11-97:26|1|3|20"],"kind":8,"storage":0},{"id":8,"usr":16599683076120063252,"detailed_name":"int Vb::m_noise","short_name_offset":8,"short_name_size":7,"hover":"","comments":"\nNoise model in use. This is created by the inference\nmethod deleted on destruction","declarations":[],"spell":"199:31-199:38|0|2|2","extent":"199:5-199:38|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":9,"usr":15589729815189703006,"detailed_name":"int Vb::resultFs","short_name_offset":8,"short_name_size":8,"hover":"","comments":"Free energy for each voxel","declarations":[],"spell":"215:25-215:33|0|2|2","extent":"215:5-215:33|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":10,"usr":16878020070266970098,"detailed_name":"const int *Vb::m_origdata","short_name_offset":15,"short_name_size":10,"hover":"","comments":"Voxelwise input data","declarations":[],"spell":"218:27-218:37|0|2|2","extent":"218:5-218:37|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":11,"usr":18380728982847278462,"detailed_name":"const int *Vb::m_coords","short_name_offset":15,"short_name_size":8,"hover":"","comments":"Voxelwise co-ordinates","declarations":[],"spell":"221:27-221:35|0|2|2","extent":"221:5-221:35|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":12,"usr":15730513128966105696,"detailed_name":"const int *Vb::m_suppdata","short_name_offset":15,"short_name_size":10,"hover":"","comments":"Voxelwise supplementary data","declarations":[],"spell":"224:27-224:37|0|2|2","extent":"224:5-224:37|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":13,"usr":1856666725886641384,"detailed_name":"int *Vb::m_ctx","short_name_offset":9,"short_name_size":5,"hover":"","comments":"Stores current run state (parameters, MVNs, linearization centres etc","declarations":[],"spell":"235:17-235:22|0|2|2","extent":"235:5-235:22|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":14,"usr":15568482858675728455,"detailed_name":"int Vb::m_lin_model","short_name_offset":8,"short_name_size":11,"hover":"","comments":"Linearized wrapper around the forward model","declarations":[],"spell":"238:37-238:48|0|2|2","extent":"238:5-238:48|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":15,"usr":6228879075006542249,"detailed_name":"int Vb::m_conv","short_name_offset":8,"short_name_size":6,"hover":"","comments":"Convergence detector for each voxel","declarations":[],"spell":"241:40-241:46|0|2|2","extent":"241:5-241:46|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":16,"usr":3257693925618195907,"detailed_name":"bool Vb::m_have_mask","short_name_offset":9,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"261:10-261:21|0|2|2","extent":"261:5-261:21|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":17,"usr":12459479345350274249,"detailed_name":"int Vb::m_mask","short_name_offset":8,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"263:23-263:29|0|2|2","extent":"263:5-263:29|0|2|0","type":1,"uses":[],"kind":8,"storage":0}]}