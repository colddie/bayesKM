16
{"last_modification_time":1570204744,"language":1,"import_file":"d:/working/bayeskm/fit_pros/gaussdev.c","args_hash":10677345612752838919,"includes":[{"line":7,"resolved_path":"d:/cquery/build/release/lib/clang/7.0.0/include/stddef.h"},{"line":8,"resolved_path":"d:/windows kits/10/include/10.0.17763.0/ucrt/stdio.h"},{"line":9,"resolved_path":"d:/windows kits/10/include/10.0.17763.0/ucrt/stdlib.h"},{"line":10,"resolved_path":"d:/windows kits/10/include/10.0.17763.0/ucrt/math.h"},{"line":12,"resolved_path":"d:/windows kits/10/include/10.0.17763.0/ucrt/string.h"},{"line":14,"resolved_path":"d:/windows kits/10/include/10.0.17763.0/ucrt/time.h"}],"dependencies":["d:/working/bayeskm/fit_pros/gaussdev.c","d:/cquery/build/release/lib/clang/7.0.0/include/stddef.h","d:/windows kits/10/include/10.0.17763.0/ucrt/stdio.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt.h","c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/vcruntime.h","c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/sal.h","d:/cquery/build/release/lib/clang/7.0.0/include/vadefs.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_wstdio.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_stdio_config.h","d:/windows kits/10/include/10.0.17763.0/ucrt/stdlib.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_malloc.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_search.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_wstdlib.h","d:/cquery/build/release/lib/clang/7.0.0/include/limits.h","c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/limits.h","d:/windows kits/10/include/10.0.17763.0/ucrt/math.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_math.h","d:/windows kits/10/include/10.0.17763.0/ucrt/string.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_memory.h","d:/windows kits/10/include/10.0.17763.0/ucrt/corecrt_memcpy_s.h","d:/windows kits/10/include/10.0.17763.0/ucrt/errno.h","c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/vcruntime_string.h","d:/cquery/build/release/lib/clang/7.0.0/include/__stddef_max_align_t.h","c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/vadefs.h","c:/program files (x86)/microsoft visual studio/2017/enterprise/vc/tools/msvc/14.16.27023/include/concurrencysal.h"],"skipped_by_preprocessor":["1:1-4:7","18:1-20:7"],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,19,20,22,24,25,27,29,31,37,38,44,46,48,50,52,54,56,58,60,62,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,98,100,102,108,109,110,116,120,122,123,131,132,133,134,135,136],"uses":[]},{"id":1,"usr":12521148848170842956,"detailed_name":"(anon struct)","short_name_offset":0,"short_name_size":13,"kind":23,"hover":"","comments":"TGO point","declarations":[],"spell":"41:9-41:15|-1|1|2","extent":"41:9-52:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[3,4,5,6,7],"instances":[],"uses":[]},{"id":2,"usr":6569101274213590169,"detailed_name":"TGO_POINT","short_name_offset":0,"short_name_size":9,"kind":252,"hover":"","comments":"","declarations":[],"spell":"52:3-52:12|-1|1|2","extent":"41:1-52:12|-1|1|0","alias_of":1,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["52:3-52:12|-1|1|4"]},{"id":3,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[4,5,6,7,21,23,26,28,30,32,33,34,35,36,41,42,43,45,47,49,51,53,55,57,59,61,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,99,101,103,104,105,106,107,111,112,113,114,115,117,118,119,121,124,125,126,127,128,129,130],"uses":[]},{"id":4,"usr":9571623446933240290,"detailed_name":"(anon enum)","short_name_offset":0,"short_name_size":11,"kind":10,"hover":"","comments":"BOBYQA return codes","declarations":[],"spell":"85:9-85:13|-1|1|2","extent":"85:9-97:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":5,"usr":620995801683511990,"detailed_name":"bobyqa_result","short_name_offset":0,"short_name_size":13,"kind":252,"hover":"","comments":"","declarations":[],"spell":"97:3-97:16|-1|1|2","extent":"85:1-97:16|-1|1|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["97:3-97:16|-1|1|4"]},{"id":6,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":7,"usr":1913722181207855105,"detailed_name":"bobyqa_func","short_name_offset":0,"short_name_size":11,"kind":252,"hover":"typedef double (*bobyqa_func)(int n, const double *x, void *func_data)","comments":"BOBYQA objective function","declarations":[],"spell":"100:18-100:29|-1|1|2","extent":"100:1-100:71|-1|1|0","alias_of":6,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[39],"uses":["100:18-100:29|-1|1|4","166:3-166:14|-1|1|4"]},{"id":8,"usr":13041210304425078030,"detailed_name":"(anon struct)","short_name_offset":0,"short_name_size":13,"kind":23,"hover":"","comments":"bobyqa data in a struct by VO","declarations":[],"spell":"103:9-103:15|-1|1|2","extent":"103:9-407:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"instances":[],"uses":[]},{"id":9,"usr":17171644823692490227,"detailed_name":"bobyqa_data","short_name_offset":0,"short_name_size":11,"kind":252,"hover":"","comments":"","declarations":[],"spell":"407:3-407:14|-1|1|2","extent":"103:1-407:14|-1|1|0","alias_of":8,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["407:3-407:14|-1|1|4"]},{"id":10,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[40],"uses":[]}],"funcs":[{"id":0,"usr":18288683912494522948,"detailed_name":"int nnls(double **a, int m, int n, double *b, double *x, double *rnorm, double *w, double *zz, int *index)","short_name_offset":4,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"nnls","declarations":[{"spell":"495:5-495:9|-1|1|1","param_spellings":["496:12-496:13","496:19-496:20","496:26-496:27","496:37-496:38","496:48-496:49","497:11-497:16","497:26-497:27","497:37-497:39","497:46-497:51"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":5364319946426182900,"detailed_name":"int nnlsWght(int N, int M, double **A, double *b, double *weight)","short_name_offset":4,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"499:5-499:13|-1|1|1","param_spellings":["500:7-500:8","500:14-500:15","500:26-500:27","500:37-500:38","500:48-500:54"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":2153887106789890024,"detailed_name":"int nnlsWghtSquared(int N, int M, double **A, double *b, double *sweight)","short_name_offset":4,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"502:5-502:20|-1|1|1","param_spellings":["503:7-503:8","503:14-503:15","503:26-503:27","503:37-503:38","503:48-503:55"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":16810024255555298325,"detailed_name":"int bootstrapr(int iterNr, double *cLim1, double *cLim2, double *SD, double *parameter, double *lowlim, double *uplim, int frameNr, double *origTac, double *fitTac, double *bsTAC, int parNr, double *weight, double (*objf)(int, double *, void *), char *status, int verbose, double *matrix)","short_name_offset":4,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"bootstrap","declarations":[{"spell":"509:5-509:15|-1|1|1","param_spellings":["510:7-510:13","511:11-511:16","511:26-511:31","511:41-511:43","511:53-511:62","512:11-512:17","512:27-512:32","512:38-512:45","512:55-512:62","513:11-513:17","513:27-513:32","513:38-513:43","513:53-513:59","514:12-514:16","514:46-514:52","514:58-514:65","514:75-514:81"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":8808557863949671765,"detailed_name":"int temp_roundf(float e)","short_name_offset":4,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"517:5-517:16|-1|1|1","param_spellings":["517:23-517:24"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":16410687456115110120,"detailed_name":"int TGO_SQUARED_TRANSF","short_name_offset":4,"short_name_size":18,"hover":"","comments":"tgo */\r\n Biased (1) or even (0) parameter distribution","declarations":["34:12-34:30|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2},{"id":1,"usr":3434662474857141988,"detailed_name":"int TGO_LOCAL_INSIDE","short_name_offset":4,"short_name_size":16,"hover":"","comments":"Local optimization outside (0) or inside (1) iTGO","declarations":["36:12-36:28|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2},{"id":2,"usr":10861785931902407650,"detailed_name":"int TGO_LOCAL_OPT","short_name_offset":4,"short_name_size":13,"hover":"","comments":"Local optimization method is Powell-Brent (0) or Bobyqa (1)","declarations":["38:12-38:25|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2},{"id":3,"usr":10613030200343948494,"detailed_name":"int (anon struct)::topomin","short_name_offset":19,"short_name_size":7,"hover":"","comments":"index of min","declarations":[],"spell":"43:7-43:14|1|2|2","extent":"43:3-43:14|1|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":4,"usr":3356965294798791590,"detailed_name":"double (anon struct)::fvalue","short_name_offset":22,"short_name_size":6,"hover":"","comments":"min values","declarations":[],"spell":"45:10-45:16|1|2|2","extent":"45:3-45:16|1|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":5,"usr":769894313992068092,"detailed_name":"double [50] (anon struct)::par","short_name_offset":27,"short_name_size":3,"hover":"","comments":"paramaters at min","declarations":[],"spell":"47:10-47:13|1|2|2","extent":"47:3-47:25|1|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":6,"usr":2096634157415531991,"detailed_name":"double [50] (anon struct)::delta","short_name_offset":27,"short_name_size":5,"hover":"","comments":"added by VO 2011-11-25","declarations":[],"spell":"49:10-49:15|1|2|2","extent":"49:3-49:27|1|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":7,"usr":11588360644137486890,"detailed_name":"double (anon struct)::fvalrange","short_name_offset":22,"short_name_size":9,"hover":"","comments":"added by VO 2011-11-25","declarations":[],"spell":"51:10-51:19|1|2|2","extent":"51:3-51:19|1|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":8,"usr":16634082284924883424,"detailed_name":"(anon enum)::BOBYQA_INVALID_ARGS","short_name_offset":13,"short_name_size":19,"hover":"(anon enum)::BOBYQA_INVALID_ARGS = -1","comments":"","declarations":[],"spell":"86:4-86:23|4|2|2","extent":"86:4-86:28|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":9,"usr":2709619071650930258,"detailed_name":"(anon enum)::BOBYQA_OUT_OF_MEMORY","short_name_offset":13,"short_name_size":20,"hover":"(anon enum)::BOBYQA_OUT_OF_MEMORY = -2","comments":"","declarations":[],"spell":"87:4-87:24|4|2|2","extent":"87:4-87:29|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":10,"usr":12428724227399341744,"detailed_name":"(anon enum)::BOBYQA_ROUNDOFF_LIMITED","short_name_offset":13,"short_name_size":23,"hover":"(anon enum)::BOBYQA_ROUNDOFF_LIMITED = -3","comments":"","declarations":[],"spell":"88:4-88:27|4|2|2","extent":"88:4-88:32|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":11,"usr":14265989386537572379,"detailed_name":"(anon enum)::BOBYQA_FAIL","short_name_offset":13,"short_name_size":11,"hover":"(anon enum)::BOBYQA_FAIL = -4","comments":"generic fail code","declarations":[],"spell":"89:4-89:15|4|2|2","extent":"89:4-89:20|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":12,"usr":66433815484867325,"detailed_name":"(anon enum)::BOBYQA_SUCCESS","short_name_offset":13,"short_name_size":14,"hover":"(anon enum)::BOBYQA_SUCCESS = 0","comments":"generic success code","declarations":[],"spell":"90:4-90:18|4|2|2","extent":"90:4-90:22|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":13,"usr":13762680343695066804,"detailed_name":"(anon enum)::BOBYQA_MINF_MAX_REACHED","short_name_offset":13,"short_name_size":23,"hover":"(anon enum)::BOBYQA_MINF_MAX_REACHED = 1","comments":"","declarations":[],"spell":"91:4-91:27|4|2|2","extent":"91:4-91:31|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":14,"usr":140332713741475502,"detailed_name":"(anon enum)::BOBYQA_FTOL_REACHED","short_name_offset":13,"short_name_size":19,"hover":"(anon enum)::BOBYQA_FTOL_REACHED = 2","comments":"","declarations":[],"spell":"92:4-92:23|4|2|2","extent":"92:4-92:27|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":15,"usr":7001406452013167723,"detailed_name":"(anon enum)::BOBYQA_XTOL_REACHED","short_name_offset":13,"short_name_size":19,"hover":"(anon enum)::BOBYQA_XTOL_REACHED = 3","comments":"","declarations":[],"spell":"93:4-93:23|4|2|2","extent":"93:4-93:27|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":16,"usr":5405896205016714901,"detailed_name":"(anon enum)::BOBYQA_MAXEVAL_REACHED","short_name_offset":13,"short_name_size":22,"hover":"(anon enum)::BOBYQA_MAXEVAL_REACHED = 4","comments":"","declarations":[],"spell":"94:4-94:26|4|2|2","extent":"94:4-94:30|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":17,"usr":10824904946596308349,"detailed_name":"(anon enum)::BOBYQA_RELFTOL_REACHED","short_name_offset":13,"short_name_size":22,"hover":"(anon enum)::BOBYQA_RELFTOL_REACHED = 5","comments":"","declarations":[],"spell":"95:4-95:26|4|2|2","extent":"95:4-95:30|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":18,"usr":6361032944423440609,"detailed_name":"(anon enum)::BOBYQA_ABSFTOL_REACHED","short_name_offset":13,"short_name_size":22,"hover":"(anon enum)::BOBYQA_ABSFTOL_REACHED = 6","comments":"","declarations":[],"spell":"96:4-96:26|4|2|2","extent":"96:4-96:30|4|2|0","type":0,"uses":[],"kind":22,"storage":0},{"id":19,"usr":16266540233983859646,"detailed_name":"int (anon struct)::n","short_name_offset":19,"short_name_size":1,"hover":"","comments":"N is the number of fitted variables and must be at least two","declarations":[],"spell":"105:7-105:8|8|2|2","extent":"105:3-105:8|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":20,"usr":1071797448754288849,"detailed_name":"int (anon struct)::npt","short_name_offset":19,"short_name_size":3,"hover":"","comments":"NPT is the number of interpolation conditions. Its value must be in\r\nthe interval [N+2,(N+1)(N+2)/2]. Choices that exceed 2*N+1 are not\r\nrecommended.","declarations":[],"spell":"109:7-109:10|8|2|2","extent":"109:3-109:10|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":21,"usr":12807317756614363456,"detailed_name":"double *(anon struct)::x","short_name_offset":23,"short_name_size":1,"hover":"","comments":"Initial values of the variables to be fitted must be set in\r\nX(1),X(2),...,X(N).\r\nThey will be changed to the values that give the least calculated F.","declarations":[],"spell":"113:11-113:12|8|2|2","extent":"113:3-113:12|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":22,"usr":8199586887488338285,"detailed_name":"int (anon struct)::x_size","short_name_offset":19,"short_name_size":6,"hover":"","comments":"Size of array X","declarations":[],"spell":"115:7-115:13|8|2|2","extent":"115:3-115:13|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":23,"usr":9980343341158015326,"detailed_name":"double *(anon struct)::xscale","short_name_offset":23,"short_name_size":6,"hover":"","comments":"Scale factors for fitted function parameters","declarations":[],"spell":"117:11-117:17|8|2|2","extent":"117:3-117:17|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":24,"usr":3058065231634959990,"detailed_name":"int (anon struct)::xscale_size","short_name_offset":19,"short_name_size":11,"hover":"","comments":"Size of array XSCALE","declarations":[],"spell":"119:7-119:18|8|2|2","extent":"119:3-119:18|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":25,"usr":9289063295534118217,"detailed_name":"int (anon struct)::nfull","short_name_offset":19,"short_name_size":5,"hover":"","comments":"Nr of all parameters, including the fixed parameters","declarations":[],"spell":"121:7-121:12|8|2|2","extent":"121:3-121:12|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":26,"usr":16247626783785196960,"detailed_name":"double *(anon struct)::xfull","short_name_offset":23,"short_name_size":5,"hover":"","comments":"Same as above, but this list contains all parameters required by the\r\nminimized function, i.e. both fitted and fixed parameters;\r\nArray size is nfull.","declarations":[],"spell":"125:11-125:16|8|2|2","extent":"125:3-125:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":27,"usr":5208391496260818146,"detailed_name":"int *(anon struct)::xplace","short_name_offset":20,"short_name_size":6,"hover":"","comments":"Index list of fitted parameters, that is, at which positions in xfull[]\r\nthe parameters in x[] must be placed.","declarations":[],"spell":"128:8-128:14|8|2|2","extent":"128:3-128:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":28,"usr":15360424795480908307,"detailed_name":"double *(anon struct)::xl","short_name_offset":23,"short_name_size":2,"hover":"","comments":"For I=1,2,...,N, XL(I) and XU(I) must provide the lower and upper\r\nbounds, respectively, on X(I). The construction of quadratic models\r\nrequires XL(I) to be strictly less than XU(I) for each I. Further,\r\nthe contribution to a model from changes to the I-th variable is\r\ndamaged severely by rounding errors if XU(I)-XL(I) is too small.","declarations":[],"spell":"134:11-134:13|8|2|2","extent":"134:3-134:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":29,"usr":2378468383866924442,"detailed_name":"int (anon struct)::xl_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array XL","declarations":[],"spell":"136:7-136:14|8|2|2","extent":"136:3-136:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":30,"usr":13605055436219487366,"detailed_name":"double *(anon struct)::xu","short_name_offset":23,"short_name_size":2,"hover":"","comments":"see xl.","declarations":[],"spell":"138:11-138:13|8|2|2","extent":"138:3-138:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":31,"usr":1128449289381927109,"detailed_name":"int (anon struct)::xu_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array XU","declarations":[],"spell":"140:7-140:14|8|2|2","extent":"140:3-140:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":32,"usr":5189369755860348296,"detailed_name":"double (anon struct)::rhobeg","short_name_offset":22,"short_name_size":6,"hover":"","comments":"RHOBEG and RHOEND must be set to the initial and final values of a trust\r\nregion radius, so both must be positive with RHOEND no greater than\r\nRHOBEG. Typically, RHOBEG should be about one tenth of the greatest\r\nexpected change to a variable, while RHOEND should indicate the\r\naccuracy that is required in the final values of the variables. An\r\nerror return occurs if any of the differences XU(I)-XL(I), I=1,...,N,\r\nis less than 2*RHOBEG.","declarations":[],"spell":"148:10-148:16|8|2|2","extent":"148:3-148:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":33,"usr":14765283546137473888,"detailed_name":"double (anon struct)::rhoend","short_name_offset":22,"short_name_size":6,"hover":"","comments":"see rhobeg","declarations":[],"spell":"150:10-150:16|8|2|2","extent":"150:3-150:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":34,"usr":10322349107549976469,"detailed_name":"double (anon struct)::minf_max","short_name_offset":22,"short_name_size":8,"hover":"","comments":"Stopping rule: maximum allowed function value","declarations":[],"spell":"152:10-152:18|8|2|2","extent":"152:3-152:18|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":35,"usr":13054065945960733048,"detailed_name":"double (anon struct)::ftol_rel","short_name_offset":22,"short_name_size":8,"hover":"","comments":"Stopping rule: relative tolerance to function value","declarations":[],"spell":"154:10-154:18|8|2|2","extent":"154:3-154:18|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":36,"usr":15608632357284948988,"detailed_name":"double (anon struct)::ftol_abs","short_name_offset":22,"short_name_size":8,"hover":"","comments":"Stopping rule: absolute tolerance to function value","declarations":[],"spell":"156:10-156:18|8|2|2","extent":"156:3-156:18|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":37,"usr":3707339982214795258,"detailed_name":"int (anon struct)::maxeval","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Stopping rule: max nr of function evaluations","declarations":[],"spell":"158:7-158:14|8|2|2","extent":"158:3-158:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":38,"usr":364315084056931500,"detailed_name":"int (anon struct)::nevals","short_name_offset":19,"short_name_size":6,"hover":"","comments":"Number of function evaluations","declarations":[],"spell":"160:7-160:13|8|2|2","extent":"160:3-160:13|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":39,"usr":10827879435459724765,"detailed_name":"bobyqa_func (anon struct)::objf","short_name_offset":27,"short_name_size":4,"hover":"","comments":"SUBROUTINE CALFUN (N,X,F) has to be provided by the user. It must set\r\nF to the value of the objective function for the current values of the\r\nvariables X(1),X(2),...,X(N), which are generated automatically in a\r\nway that satisfies the bounds given in XL and XU.","declarations":[],"spell":"166:15-166:19|8|2|2","extent":"166:3-166:19|8|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":40,"usr":15365046310163483454,"detailed_name":"void *(anon struct)::objf_data","short_name_offset":21,"short_name_size":9,"hover":"","comments":"Pointer to data passed to objective function","declarations":[],"spell":"168:9-168:18|8|2|2","extent":"168:3-168:18|8|2|0","type":10,"uses":[],"kind":8,"storage":0},{"id":41,"usr":13162444078651003307,"detailed_name":"double (anon struct)::minf","short_name_offset":22,"short_name_size":4,"hover":"","comments":"Minimum value of function","declarations":[],"spell":"170:10-170:14|8|2|2","extent":"170:3-170:14|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":42,"usr":14253340425034998267,"detailed_name":"double *(anon struct)::wmptr","short_name_offset":23,"short_name_size":5,"hover":"","comments":"Pointer to total working memory; just for testing etc","declarations":[],"spell":"173:11-173:16|8|2|2","extent":"173:3-173:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":43,"usr":5008423025249523590,"detailed_name":"double *(anon struct)::lwmptr","short_name_offset":23,"short_name_size":6,"hover":"","comments":"Pointer to working memory allocated by bobyqa_set_memory();\r\nbobyqa_free_memory() will free this memory and set it to NULL.\r\nIf memory was not allocated by bobyqa_set_memory(), this is NULL.","declarations":[],"spell":"177:11-177:17|8|2|2","extent":"177:3-177:17|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":44,"usr":11391767195032132233,"detailed_name":"int *(anon struct)::liwmptr","short_name_offset":20,"short_name_size":7,"hover":"","comments":"Pointer to int working memory allocated by bobyqa_set_memory();\r\nbobyqa_free_memory() will free this memory and set it to NULL.","declarations":[],"spell":"180:8-180:15|8|2|2","extent":"180:3-180:15|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":45,"usr":17731855355758529739,"detailed_name":"double *(anon struct)::xbase","short_name_offset":23,"short_name_size":5,"hover":"","comments":"XBASE holds a shift of origin that should reduce the contributions\r\nfrom rounding errors to values of the model and Lagrange functions.\r\nXOPT is set to the displacement from XBASE of the trust region centre.","declarations":[],"spell":"185:11-185:16|8|2|2","extent":"185:3-185:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":46,"usr":9498169586776257442,"detailed_name":"int (anon struct)::xbase_size","short_name_offset":19,"short_name_size":10,"hover":"","comments":"Size of array XBASE","declarations":[],"spell":"187:7-187:17|8|2|2","extent":"187:3-187:17|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":47,"usr":15079375704500803478,"detailed_name":"double *(anon struct)::xpt","short_name_offset":23,"short_name_size":3,"hover":"","comments":"XPT is a two-dimensional array that holds the coordinates of the\r\ninterpolation points relative to XBASE.","declarations":[],"spell":"190:11-190:14|8|2|2","extent":"190:3-190:14|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":48,"usr":18386300860664498101,"detailed_name":"int (anon struct)::xpt_size","short_name_offset":19,"short_name_size":8,"hover":"","comments":"Size of array XPT","declarations":[],"spell":"192:7-192:15|8|2|2","extent":"192:3-192:15|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":49,"usr":11067381700654111601,"detailed_name":"double *(anon struct)::fval","short_name_offset":23,"short_name_size":4,"hover":"","comments":"FVAL holds the values of F at the interpolation points.","declarations":[],"spell":"194:11-194:15|8|2|2","extent":"194:3-194:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":50,"usr":578500906759129068,"detailed_name":"int (anon struct)::fval_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array FVAL","declarations":[],"spell":"196:7-196:16|8|2|2","extent":"196:3-196:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":51,"usr":719197280342370816,"detailed_name":"double *(anon struct)::xopt","short_name_offset":23,"short_name_size":4,"hover":"","comments":"All the components of every XOPT are going to satisfy the bounds\r\nSL(I) .LEQ. XOPT(I) .LEQ. SU(I), with appropriate equalities when\r\nXOPT is on a constraint boundary.","declarations":[],"spell":"200:11-200:15|8|2|2","extent":"200:3-200:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":52,"usr":16843563501398389379,"detailed_name":"int (anon struct)::xopt_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array XOPT","declarations":[],"spell":"202:7-202:16|8|2|2","extent":"202:3-202:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":53,"usr":16251058386251527287,"detailed_name":"double *(anon struct)::gopt","short_name_offset":23,"short_name_size":4,"hover":"","comments":"GOPT holds the gradient of the quadratic model at XBASE+XOPT.","declarations":[],"spell":"204:11-204:15|8|2|2","extent":"204:3-204:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":54,"usr":13483310418057366701,"detailed_name":"int (anon struct)::gopt_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array GOPT","declarations":[],"spell":"206:7-206:16|8|2|2","extent":"206:3-206:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":55,"usr":12684498351864097309,"detailed_name":"double *(anon struct)::hq","short_name_offset":23,"short_name_size":2,"hover":"","comments":"HQ holds the explicit second derivatives of the quadratic model.","declarations":[],"spell":"208:11-208:13|8|2|2","extent":"208:3-208:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":56,"usr":14835226802926905863,"detailed_name":"int (anon struct)::hq_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array HQ","declarations":[],"spell":"210:7-210:14|8|2|2","extent":"210:3-210:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":57,"usr":15274685645396481318,"detailed_name":"double *(anon struct)::pq","short_name_offset":23,"short_name_size":2,"hover":"","comments":"PQ contains the parameters of the implicit second derivatives of the\r\nquadratic model.","declarations":[],"spell":"213:11-213:13|8|2|2","extent":"213:3-213:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":58,"usr":1926029490707811618,"detailed_name":"int (anon struct)::pq_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array PQ","declarations":[],"spell":"215:7-215:14|8|2|2","extent":"215:3-215:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":59,"usr":15944642465188809689,"detailed_name":"double *(anon struct)::bmat","short_name_offset":23,"short_name_size":4,"hover":"","comments":"BMAT holds the last N columns of H.","declarations":[],"spell":"217:11-217:15|8|2|2","extent":"217:3-217:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":60,"usr":17328403146544320547,"detailed_name":"int (anon struct)::bmat_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array BMAT","declarations":[],"spell":"219:7-219:16|8|2|2","extent":"219:3-219:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":61,"usr":15719718308521728909,"detailed_name":"double *(anon struct)::zmat","short_name_offset":23,"short_name_size":4,"hover":"","comments":"ZMAT holds the factorization of the leading NPT by NPT submatrix of H,\r\nthis factorization being ZMAT times ZMAT^T, which provides both the\r\ncorrect rank and positive semi-definiteness.","declarations":[],"spell":"223:11-223:15|8|2|2","extent":"223:3-223:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":62,"usr":8607832034309245705,"detailed_name":"int (anon struct)::zmat_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array ZMAT","declarations":[],"spell":"225:7-225:16|8|2|2","extent":"225:3-225:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":63,"usr":4962625776309675968,"detailed_name":"int (anon struct)::ndim","short_name_offset":19,"short_name_size":4,"hover":"","comments":"NDIM is the first dimension of BMAT and has the value NPT+N.","declarations":[],"spell":"227:7-227:11|8|2|2","extent":"227:3-227:11|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":64,"usr":9603768180086611098,"detailed_name":"double *(anon struct)::sl","short_name_offset":23,"short_name_size":2,"hover":"","comments":"SL and SU hold the differences XL-XBASE and XU-XBASE, respectively.","declarations":[],"spell":"229:11-229:13|8|2|2","extent":"229:3-229:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":65,"usr":11994706766578008659,"detailed_name":"int (anon struct)::sl_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array SL","declarations":[],"spell":"231:7-231:14|8|2|2","extent":"231:3-231:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":66,"usr":9497628649948396700,"detailed_name":"double *(anon struct)::su","short_name_offset":23,"short_name_size":2,"hover":"","comments":"SL and SU hold the differences XL-XBASE and XU-XBASE, respectively.","declarations":[],"spell":"233:11-233:13|8|2|2","extent":"233:3-233:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":67,"usr":15934171031870235896,"detailed_name":"int (anon struct)::su_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array SU","declarations":[],"spell":"235:7-235:14|8|2|2","extent":"235:3-235:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":68,"usr":9254108735716039910,"detailed_name":"double *(anon struct)::xnew","short_name_offset":23,"short_name_size":4,"hover":"","comments":"XNEW is chosen by SUBROUTINE TRSBOX or ALTMOV. Usually XBASE+XNEW is the\r\nvector of variables for the next call of CALFUN. XNEW also satisfies\r\nthe SL and SU constraints in the way that has just been mentioned.","declarations":[],"spell":"239:11-239:15|8|2|2","extent":"239:3-239:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":69,"usr":16598043846994826147,"detailed_name":"int (anon struct)::xnew_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array XNEW","declarations":[],"spell":"241:7-241:16|8|2|2","extent":"241:3-241:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":70,"usr":13946463846780404403,"detailed_name":"double *(anon struct)::xalt","short_name_offset":23,"short_name_size":4,"hover":"","comments":"XALT is an alternative to XNEW, chosen by ALTMOV, that may replace XNEW\r\nin order to increase the denominator in the updating of UPDATE.","declarations":[],"spell":"244:11-244:15|8|2|2","extent":"244:3-244:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":71,"usr":6583100473256987458,"detailed_name":"int (anon struct)::xalt_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array XALT","declarations":[],"spell":"246:7-246:16|8|2|2","extent":"246:3-246:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":72,"usr":1382039268940003123,"detailed_name":"double *(anon struct)::dtrial","short_name_offset":23,"short_name_size":6,"hover":"","comments":"DTRIAL is reserved for a trial step from XOPT, usually XNEW-XOPT.","declarations":[],"spell":"248:11-248:17|8|2|2","extent":"248:3-248:17|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":73,"usr":10542792396916018353,"detailed_name":"int (anon struct)::dtrial_size","short_name_offset":19,"short_name_size":11,"hover":"","comments":"Size of array DTRIAL","declarations":[],"spell":"250:7-250:18|8|2|2","extent":"250:3-250:18|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":74,"usr":2185265948102094593,"detailed_name":"double *(anon struct)::vlag","short_name_offset":23,"short_name_size":4,"hover":"","comments":"VLAG contains the values of the Lagrange functions at a new point X.\r\nThey are part of a product that requires VLAG to be of length NDIM.","declarations":[],"spell":"253:11-253:15|8|2|2","extent":"253:3-253:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":75,"usr":13913294363788566577,"detailed_name":"int (anon struct)::vlag_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array VLAG","declarations":[],"spell":"255:7-255:16|8|2|2","extent":"255:3-255:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":76,"usr":12401215322773113970,"detailed_name":"double *(anon struct)::w2npt","short_name_offset":23,"short_name_size":5,"hover":"","comments":"W2NPT is working memory of size 2*NPT","declarations":[],"spell":"258:11-258:16|8|2|2","extent":"258:3-258:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":77,"usr":1472226780775110136,"detailed_name":"int (anon struct)::w2npt_size","short_name_offset":19,"short_name_size":10,"hover":"","comments":"Size of array W2NPT","declarations":[],"spell":"260:7-260:17|8|2|2","extent":"260:3-260:17|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":78,"usr":15332272236404240682,"detailed_name":"double *(anon struct)::wndim","short_name_offset":23,"short_name_size":5,"hover":"","comments":"Working memory of size NDIM","declarations":[],"spell":"262:11-262:16|8|2|2","extent":"262:3-262:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":79,"usr":9892049146676959658,"detailed_name":"int (anon struct)::wndim_size","short_name_offset":19,"short_name_size":10,"hover":"","comments":"Size of array WNDIM","declarations":[],"spell":"264:7-264:17|8|2|2","extent":"264:3-264:17|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":80,"usr":4460574468062040345,"detailed_name":"double *(anon struct)::wn","short_name_offset":23,"short_name_size":2,"hover":"","comments":"WN is working memory of size N","declarations":[],"spell":"266:11-266:13|8|2|2","extent":"266:3-266:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":81,"usr":5467958028608831115,"detailed_name":"int (anon struct)::wn_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array WN","declarations":[],"spell":"268:7-268:14|8|2|2","extent":"268:3-268:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":82,"usr":5138357585414143651,"detailed_name":"double *(anon struct)::gnew","short_name_offset":23,"short_name_size":4,"hover":"","comments":"GNEW holds the gradient of the quadratic model at XOPT+D. It is updated\r\nwhen DTRIAL is updated. Size N.","declarations":[],"spell":"271:11-271:15|8|2|2","extent":"271:3-271:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":83,"usr":210140846843977710,"detailed_name":"int (anon struct)::gnew_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array GNEW","declarations":[],"spell":"273:7-273:16|8|2|2","extent":"273:3-273:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":84,"usr":5181787506333580259,"detailed_name":"double *(anon struct)::xbdi","short_name_offset":23,"short_name_size":4,"hover":"","comments":"XBDI is a working space vector of size N.\r\nFor I=1,2,...,N, the element XBDI(I) is\r\nset to -1.0, 0.0, or 1.0, the value being nonzero if and only if the\r\nI-th variable has become fixed at a bound, the bound being SL(I) or\r\nSU(I) in the case XBDI(I)=-1.0 or XBDI(I)=1.0, respectively. This\r\ninformation is accumulated during the construction of XNEW.","declarations":[],"spell":"280:11-280:15|8|2|2","extent":"280:3-280:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":85,"usr":10651504725275576820,"detailed_name":"int (anon struct)::xbdi_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array XBDI","declarations":[],"spell":"282:7-282:16|8|2|2","extent":"282:3-282:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":86,"usr":3057309710871820622,"detailed_name":"double *(anon struct)::s","short_name_offset":23,"short_name_size":1,"hover":"","comments":"The arrays S, HS and HRED are also used for working space, all of size N.\r\nThey hold the current search direction, and the changes in the gradient\r\nof Q along S and the reduced D, respectively, where the reduced D is the\r\nsame as D, except that the components of the fixed variables are zero.","declarations":[],"spell":"287:11-287:12|8|2|2","extent":"287:3-287:12|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":87,"usr":3875930738315183964,"detailed_name":"int (anon struct)::s_size","short_name_offset":19,"short_name_size":6,"hover":"","comments":"Size of array S","declarations":[],"spell":"289:7-289:13|8|2|2","extent":"289:3-289:13|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":88,"usr":2941188714010103872,"detailed_name":"double *(anon struct)::hs","short_name_offset":23,"short_name_size":2,"hover":"","comments":"The arrays S, HS and HRED are also used for working space, all of size N.\r\nThey hold the current search direction, and the changes in the gradient\r\nof Q along S and the reduced D, respectively, where the reduced D is the\r\nsame as D, except that the components of the fixed variables are zero.","declarations":[],"spell":"294:11-294:13|8|2|2","extent":"294:3-294:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":89,"usr":16647619192327514456,"detailed_name":"int (anon struct)::hs_size","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Size of array HS","declarations":[],"spell":"296:7-296:14|8|2|2","extent":"296:3-296:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":90,"usr":10937649618093998232,"detailed_name":"double *(anon struct)::hred","short_name_offset":23,"short_name_size":4,"hover":"","comments":"The arrays S, HS and HRED are also used for working space, all of size N.\r\nThey hold the current search direction, and the changes in the gradient\r\nof Q along S and the reduced D, respectively, where the reduced D is the\r\nsame as D, except that the components of the fixed variables are zero.","declarations":[],"spell":"301:11-301:15|8|2|2","extent":"301:3-301:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":91,"usr":14270667976048951924,"detailed_name":"int (anon struct)::hred_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array HRED","declarations":[],"spell":"303:7-303:16|8|2|2","extent":"303:3-303:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":92,"usr":13143891947645520373,"detailed_name":"double *(anon struct)::glag","short_name_offset":23,"short_name_size":4,"hover":"","comments":"GLAG is a vector of length N for the gradient of the KNEW-th Lagrange\r\nfunction at XOPT used in ALTMOV.","declarations":[],"spell":"306:11-306:15|8|2|2","extent":"306:3-306:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":93,"usr":16758157758536599052,"detailed_name":"int (anon struct)::glag_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array GLAG","declarations":[],"spell":"308:7-308:16|8|2|2","extent":"308:3-308:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":94,"usr":17196952482537582972,"detailed_name":"double *(anon struct)::hcol","short_name_offset":23,"short_name_size":4,"hover":"","comments":"HCOL is a vector of length NPT for the second derivative coefficients\r\nof the KNEW-th Lagrange function used in ALTMOV.","declarations":[],"spell":"311:11-311:15|8|2|2","extent":"311:3-311:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":95,"usr":13199034177857491754,"detailed_name":"int (anon struct)::hcol_size","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Size of array HCOL","declarations":[],"spell":"313:7-313:16|8|2|2","extent":"313:3-313:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":96,"usr":14273509217333186459,"detailed_name":"double *(anon struct)::ccstep","short_name_offset":23,"short_name_size":6,"hover":"","comments":"W is a working space vector of length 2N that is going to hold the\r\nconstrained Cauchy step from XOPT of the Lagrange function, followed\r\nby the downhill version of XALT when the uphill step is calculated\r\nin ALTMOV.","declarations":[],"spell":"318:11-318:17|8|2|2","extent":"318:3-318:17|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":97,"usr":2888377637477036312,"detailed_name":"int (anon struct)::ccstep_size","short_name_offset":19,"short_name_size":11,"hover":"","comments":"Size of array CCSTEP","declarations":[],"spell":"320:7-320:18|8|2|2","extent":"320:3-320:18|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":98,"usr":13147156320327169819,"detailed_name":"int (anon struct)::verbose","short_name_offset":19,"short_name_size":7,"hover":"","comments":"Verbose level; if zero, then nothing is printed to stderr or stdout","declarations":[],"spell":"323:7-323:14|8|2|2","extent":"323:3-323:14|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":99,"usr":6227239701212043371,"detailed_name":"double (anon struct)::_crvmin","short_name_offset":22,"short_name_size":7,"hover":"","comments":"@cond\r\n* CRVMIN is set to zero in TRSBOX if D reaches the trust region boundary.\r\n  Otherwise it is set to the least curvature of H that occurs in\r\n  the conjugate gradient searches that are not restricted by any\r\n  constraints. The value CRVMIN=-1.0 is set, however, if all of these\r\n  searches are constrained.","declarations":[],"spell":"333:10-333:17|8|2|2","extent":"333:3-333:17|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":100,"usr":12325599895837517999,"detailed_name":"int (anon struct)::ntrits","short_name_offset":19,"short_name_size":6,"hover":"","comments":"@endcond\r\n* Extra variable defined in bobyqb","declarations":[],"spell":"336:7-336:13|8|2|2","extent":"336:3-336:13|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":101,"usr":13727580850824876694,"detailed_name":"double (anon struct)::rho","short_name_offset":22,"short_name_size":3,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"338:10-338:13|8|2|2","extent":"338:3-338:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":102,"usr":4280515527963715054,"detailed_name":"int (anon struct)::nresc","short_name_offset":19,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"340:7-340:12|8|2|2","extent":"340:3-340:12|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":103,"usr":11993575214559051640,"detailed_name":"double (anon struct)::delta","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"342:10-342:15|8|2|2","extent":"342:3-342:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":104,"usr":17311878021042884624,"detailed_name":"double (anon struct)::diffa","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"344:10-344:15|8|2|2","extent":"344:3-344:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":105,"usr":4438152801886952748,"detailed_name":"double (anon struct)::diffb","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"346:10-346:15|8|2|2","extent":"346:3-346:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":106,"usr":7788866110538003352,"detailed_name":"double (anon struct)::diffc","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"348:10-348:15|8|2|2","extent":"348:3-348:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":107,"usr":3167810006789431338,"detailed_name":"double (anon struct)::ratio","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"350:10-350:15|8|2|2","extent":"350:3-350:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":108,"usr":14758528623649153212,"detailed_name":"int (anon struct)::itest","short_name_offset":19,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"352:7-352:12|8|2|2","extent":"352:3-352:12|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":109,"usr":16984437500745749452,"detailed_name":"int (anon struct)::nfsav","short_name_offset":19,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"354:7-354:12|8|2|2","extent":"354:3-354:12|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":110,"usr":17344601341143452359,"detailed_name":"int (anon struct)::kopt","short_name_offset":19,"short_name_size":4,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"356:7-356:11|8|2|2","extent":"356:3-356:11|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":111,"usr":7474995778496275166,"detailed_name":"double (anon struct)::fsave","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"358:10-358:15|8|2|2","extent":"358:3-358:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":112,"usr":7288491212639238711,"detailed_name":"double (anon struct)::vquad","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"360:10-360:15|8|2|2","extent":"360:3-360:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":113,"usr":9489449993256346688,"detailed_name":"double (anon struct)::fopt","short_name_offset":22,"short_name_size":4,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"362:10-362:14|8|2|2","extent":"362:3-362:14|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":114,"usr":2375159000969742556,"detailed_name":"double (anon struct)::dsq","short_name_offset":22,"short_name_size":3,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"364:10-364:13|8|2|2","extent":"364:3-364:13|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":115,"usr":2773238612808704266,"detailed_name":"double (anon struct)::xoptsq","short_name_offset":22,"short_name_size":6,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"366:10-366:16|8|2|2","extent":"366:3-366:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":116,"usr":5501693455261343485,"detailed_name":"int (anon struct)::nptm","short_name_offset":19,"short_name_size":4,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"368:7-368:11|8|2|2","extent":"368:3-368:11|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":117,"usr":5646085084074993904,"detailed_name":"double (anon struct)::alpha","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"370:10-370:15|8|2|2","extent":"370:3-370:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":118,"usr":17418365992556771989,"detailed_name":"double (anon struct)::beta","short_name_offset":22,"short_name_size":4,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"372:10-372:14|8|2|2","extent":"372:3-372:14|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":119,"usr":6816839745034473505,"detailed_name":"double (anon struct)::dnorm","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"374:10-374:15|8|2|2","extent":"374:3-374:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":120,"usr":3368435105563159008,"detailed_name":"int (anon struct)::rc","short_name_offset":19,"short_name_size":2,"hover":"","comments":"Return code","declarations":[],"spell":"376:7-376:9|8|2|2","extent":"376:3-376:9|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":121,"usr":4278217991369016839,"detailed_name":"double (anon struct)::newf","short_name_offset":22,"short_name_size":4,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"378:10-378:14|8|2|2","extent":"378:3-378:14|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":122,"usr":15636737236047103126,"detailed_name":"int (anon struct)::knew","short_name_offset":19,"short_name_size":4,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"380:7-380:11|8|2|2","extent":"380:3-380:11|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":123,"usr":6482706879202715858,"detailed_name":"int (anon struct)::kbase","short_name_offset":19,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"382:7-382:12|8|2|2","extent":"382:3-382:12|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":124,"usr":9776303452183516244,"detailed_name":"double (anon struct)::denom","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"384:10-384:15|8|2|2","extent":"384:3-384:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":125,"usr":11057154519325493961,"detailed_name":"double (anon struct)::delsq","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"386:10-386:15|8|2|2","extent":"386:3-386:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":126,"usr":11310443476177050242,"detailed_name":"double (anon struct)::scaden","short_name_offset":22,"short_name_size":6,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"388:10-388:16|8|2|2","extent":"388:3-388:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":127,"usr":12753926543702314856,"detailed_name":"double (anon struct)::biglsq","short_name_offset":22,"short_name_size":6,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"390:10-390:16|8|2|2","extent":"390:3-390:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":128,"usr":15536255551501468152,"detailed_name":"double (anon struct)::distsq","short_name_offset":22,"short_name_size":6,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"392:10-392:16|8|2|2","extent":"392:3-392:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":129,"usr":1067340534666824258,"detailed_name":"double (anon struct)::cauchy","short_name_offset":22,"short_name_size":6,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"394:10-394:16|8|2|2","extent":"394:3-394:16|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":130,"usr":8492284347897716325,"detailed_name":"double (anon struct)::adelt","short_name_offset":22,"short_name_size":5,"hover":"","comments":"Extra variable defined in bobyqb","declarations":[],"spell":"396:10-396:15|8|2|2","extent":"396:3-396:15|8|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":131,"usr":4157136248276783489,"detailed_name":"int (anon struct)::prelim_nr","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Nr of subfunction calls","declarations":[],"spell":"398:7-398:16|8|2|2","extent":"398:3-398:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":132,"usr":3050586446668215330,"detailed_name":"int (anon struct)::rescue_nr","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Nr of subfunction calls","declarations":[],"spell":"400:7-400:16|8|2|2","extent":"400:3-400:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":133,"usr":6797376738882642850,"detailed_name":"int (anon struct)::altmov_nr","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Nr of subfunction calls","declarations":[],"spell":"402:7-402:16|8|2|2","extent":"402:3-402:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":134,"usr":12451288761261026053,"detailed_name":"int (anon struct)::trsbox_nr","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Nr of subfunction calls","declarations":[],"spell":"404:7-404:16|8|2|2","extent":"404:3-404:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":135,"usr":3466243942978342120,"detailed_name":"int (anon struct)::update_nr","short_name_offset":19,"short_name_size":9,"hover":"","comments":"Nr of subfunction calls","declarations":[],"spell":"406:7-406:16|8|2|2","extent":"406:3-406:16|8|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":136,"usr":11373606685863539463,"detailed_name":"int POWELL_LINMIN_MAXIT","short_name_offset":4,"short_name_size":19,"hover":"","comments":"powell */\r\n @cond","declarations":["485:12-485:31|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2},{"id":137,"usr":3867149398713141521,"detailed_name":"MAX_PARAMETERS","short_name_offset":0,"short_name_size":14,"hover":"#define MAX_PARAMETERS 50","comments":"","declarations":[],"spell":"25:9-25:23|-1|1|2","extent":"25:9-25:26|-1|1|0","uses":[],"kind":255,"storage":0},{"id":138,"usr":11841487283951226330,"detailed_name":"MAX_PARAMS","short_name_offset":0,"short_name_size":10,"hover":"#define MAX_PARAMS MAX_PARAMETERS","comments":"","declarations":[],"spell":"29:9-29:19|-1|1|2","extent":"29:9-29:34|-1|1|0","uses":["47:14-47:24|-1|1|4","49:16-49:26|-1|1|4"],"kind":255,"storage":0}]}